name: Publish

on:
  push:
    branches: [ main ]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: ./.github/actions/codecheck
  push:
    runs-on: ubuntu-latest
    needs:
      - check
    permissions:
      contents: read
      packages: write
    steps:
      - name: Build image
        uses: VaultVulp/gp-docker-action@1.6.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          image-name: production
          image-tag: latest
          pull-image: true
          dockerfile: .config/Dockerfile
          custom-args: |
            --build-arg=DOMAIN="$DOMAIN" \
            --build-arg=NAVIGRAPH_CLIENT_ID="$NAVIGRAPH_CLIENT_ID" \
            --build-arg=NAVIGRAPH_SERVER_ID="$NAVIGRAPH_SERVER_ID" \
            --build-arg=VATSIM_CLIENT_ID="$VATSIM_CLIENT_ID" \
            --build-arg=VATSIM_ENDPOINT="$VATSIM_ENDPOINT" \
            --build-arg=DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            --build-arg=NAVIGRAPH_CLIENT_SECRET="${{ secrets.NAVIGRAPH_CLIENT_SECRET }}" \
            --build-arg=NAVIGRAPH_SERVER_SECRET="${{ secrets.NAVIGRAPH_SERVER_SECRET }}" \
            --build-arg=VATSIM_CLIENT_SECRET="${{ secrets.VATSIM_CLIENT_SECRET }}"
  deploy:
    runs-on: production
    needs:
      - push
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull
        shell: bash
        run: docker pull ghcr.io/daniluk4000/vatsim-radar/production:latest
      - name: Build
        shell: bash
        run: docker compose -f docker-compose.prod.yml build
      - name: Deploy
        shell: bash
        run: docker compose -f docker-compose.prod.yml up -d
      - name: Clear
        shell: bash
        run: docker system prune --all --force && docker system prune --volumes --force
