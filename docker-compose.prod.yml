services:
  app1: &frontend
    restart: always
    image: ghcr.io/vatsim-radar/vatsim-radar/production
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    healthcheck:
      test: "bash -c 'echo -n > /dev/tcp/127.0.0.1/3000'"
      interval: 1s
      retries: 360
    ports:
      - 8080:3000
    volumes:
      - /opt/radar-data:/radar/src/data

  app2:
    <<: *frontend
    ports:
      - 8081:3000

  app3:
    <<: *frontend
    ports:
      - 8082:3000

  app4:
    <<: *frontend
    ports:
      - 8083:3000

  app5:
    <<: *frontend
    ports:
      - 8084:3000

  worker:
    image: ghcr.io/vatsim-radar/vatsim-radar/production
    container_name: app-worker
    restart: always
    command: /radar/.config/worker-prod.sh
    volumes:
      - /opt/radar-data:/radar/src/data
    ports:
      - 8880:8880
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  redis:
    restart: always
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass RADAR
    expose:
      - 6379
    environment:
      - REDIS_APPLICATION_MODE=master
    volumes:
      - ./.config/redis.conf:/usr/local/etc/redis/redis.conf
  db:
    image: mysql
    restart: always
    container_name: db
    cap_add:
      - SYS_NICE
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=radar
      - MYSQL_ROOT_PASSWORD=localhost
    ports:
      - '3306:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 5s
      interval: 5s
      retries: 40
    volumes:
      - /opt/db:/var/lib/mysql
