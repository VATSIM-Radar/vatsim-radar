generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum DiscordStrategy {
  FULL_NAME
  FIRST_NAME
  CID_ONLY
}

model User {
  id              Int              @id @default(autoincrement())
  navigraph       NavigraphUser?
  vatsim          VatsimUser?
  discordId       String?
  discordStrategy DiscordStrategy?
  tokens          UserToken[]
  settings        Json?            @default("{}")
}

model UserToken {
  id                Int      @id @default(autoincrement())
  accessToken       String   @unique
  accessTokenExpire DateTime
  refreshMaxDate    DateTime
  userId            Int
  user              User     @relation(onDelete: Cascade, fields: [userId], references: [id])
}

enum AuthType {
  NAVIGRAPH
  VATSIM
}

model Auth {
  id              Int              @id @default(autoincrement())
  state           String           @unique
  type            AuthType
  discordId       String?
  discordStrategy DiscordStrategy?
  verifier        String?
  createdAt       DateTime         @default(now())
}

model NavigraphUser {
  id                String   @id
  userId            Int      @unique
  user              User     @relation(onDelete: Cascade, fields: [userId], references: [id])
  accessToken       String   @db.Text
  accessTokenExpire DateTime
  refreshToken      String
  hasFms            Boolean
  hasCharts         Boolean  @default(true)
}

model VatsimUser {
  id                String   @id
  accessToken       String   @db.Text
  accessTokenExpire DateTime
  refreshToken      String   @db.Text
  fullName          String
  userId            Int      @unique
  user              User     @relation(onDelete: Cascade, fields: [userId], references: [id])
}
